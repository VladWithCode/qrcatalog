/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IniciarSesionRouteImport } from './routes/iniciar-sesion'
import { Route as PublicRouteRouteImport } from './routes/_public/route'
import { Route as AuthenticatedRouteRouteImport } from './routes/_authenticated/route'
import { Route as PublicIndexRouteImport } from './routes/_public/index'
import { Route as AuthenticatedDashboardRouteImport } from './routes/_authenticated/dashboard'
import { Route as AuthenticatedSeccionesEditarSectionIdRouteImport } from './routes/_authenticated/secciones/editar.$sectionId'

const IniciarSesionRoute = IniciarSesionRouteImport.update({
  id: '/iniciar-sesion',
  path: '/iniciar-sesion',
  getParentRoute: () => rootRouteImport,
} as any)
const PublicRouteRoute = PublicRouteRouteImport.update({
  id: '/_public',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRouteRoute = AuthenticatedRouteRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const PublicIndexRoute = PublicIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PublicRouteRoute,
} as any)
const AuthenticatedDashboardRoute = AuthenticatedDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedSeccionesEditarSectionIdRoute =
  AuthenticatedSeccionesEditarSectionIdRouteImport.update({
    id: '/secciones/editar/$sectionId',
    path: '/secciones/editar/$sectionId',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/iniciar-sesion': typeof IniciarSesionRoute
  '/dashboard': typeof AuthenticatedDashboardRoute
  '/': typeof PublicIndexRoute
  '/secciones/editar/$sectionId': typeof AuthenticatedSeccionesEditarSectionIdRoute
}
export interface FileRoutesByTo {
  '/iniciar-sesion': typeof IniciarSesionRoute
  '/dashboard': typeof AuthenticatedDashboardRoute
  '/': typeof PublicIndexRoute
  '/secciones/editar/$sectionId': typeof AuthenticatedSeccionesEditarSectionIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/_public': typeof PublicRouteRouteWithChildren
  '/iniciar-sesion': typeof IniciarSesionRoute
  '/_authenticated/dashboard': typeof AuthenticatedDashboardRoute
  '/_public/': typeof PublicIndexRoute
  '/_authenticated/secciones/editar/$sectionId': typeof AuthenticatedSeccionesEditarSectionIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/iniciar-sesion'
    | '/dashboard'
    | '/'
    | '/secciones/editar/$sectionId'
  fileRoutesByTo: FileRoutesByTo
  to: '/iniciar-sesion' | '/dashboard' | '/' | '/secciones/editar/$sectionId'
  id:
    | '__root__'
    | '/_authenticated'
    | '/_public'
    | '/iniciar-sesion'
    | '/_authenticated/dashboard'
    | '/_public/'
    | '/_authenticated/secciones/editar/$sectionId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  PublicRouteRoute: typeof PublicRouteRouteWithChildren
  IniciarSesionRoute: typeof IniciarSesionRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/iniciar-sesion': {
      id: '/iniciar-sesion'
      path: '/iniciar-sesion'
      fullPath: '/iniciar-sesion'
      preLoaderRoute: typeof IniciarSesionRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_public': {
      id: '/_public'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PublicRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_public/': {
      id: '/_public/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof PublicIndexRouteImport
      parentRoute: typeof PublicRouteRoute
    }
    '/_authenticated/dashboard': {
      id: '/_authenticated/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedDashboardRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/secciones/editar/$sectionId': {
      id: '/_authenticated/secciones/editar/$sectionId'
      path: '/secciones/editar/$sectionId'
      fullPath: '/secciones/editar/$sectionId'
      preLoaderRoute: typeof AuthenticatedSeccionesEditarSectionIdRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
  }
}

interface AuthenticatedRouteRouteChildren {
  AuthenticatedDashboardRoute: typeof AuthenticatedDashboardRoute
  AuthenticatedSeccionesEditarSectionIdRoute: typeof AuthenticatedSeccionesEditarSectionIdRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedDashboardRoute: AuthenticatedDashboardRoute,
  AuthenticatedSeccionesEditarSectionIdRoute:
    AuthenticatedSeccionesEditarSectionIdRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

interface PublicRouteRouteChildren {
  PublicIndexRoute: typeof PublicIndexRoute
}

const PublicRouteRouteChildren: PublicRouteRouteChildren = {
  PublicIndexRoute: PublicIndexRoute,
}

const PublicRouteRouteWithChildren = PublicRouteRoute._addFileChildren(
  PublicRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  PublicRouteRoute: PublicRouteRouteWithChildren,
  IniciarSesionRoute: IniciarSesionRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
