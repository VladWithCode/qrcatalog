/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IniciarSesionRouteImport } from './routes/iniciar-sesion'
import { Route as PublicRouteImport } from './routes/_public'
import { Route as PublicIndexRouteImport } from './routes/_public/index'

const IniciarSesionRoute = IniciarSesionRouteImport.update({
  id: '/iniciar-sesion',
  path: '/iniciar-sesion',
  getParentRoute: () => rootRouteImport,
} as any)
const PublicRoute = PublicRouteImport.update({
  id: '/_public',
  getParentRoute: () => rootRouteImport,
} as any)
const PublicIndexRoute = PublicIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PublicRoute,
} as any)

export interface FileRoutesByFullPath {
  '/iniciar-sesion': typeof IniciarSesionRoute
  '/': typeof PublicIndexRoute
}
export interface FileRoutesByTo {
  '/iniciar-sesion': typeof IniciarSesionRoute
  '/': typeof PublicIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_public': typeof PublicRouteWithChildren
  '/iniciar-sesion': typeof IniciarSesionRoute
  '/_public/': typeof PublicIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/iniciar-sesion' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/iniciar-sesion' | '/'
  id: '__root__' | '/_public' | '/iniciar-sesion' | '/_public/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  PublicRoute: typeof PublicRouteWithChildren
  IniciarSesionRoute: typeof IniciarSesionRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/iniciar-sesion': {
      id: '/iniciar-sesion'
      path: '/iniciar-sesion'
      fullPath: '/iniciar-sesion'
      preLoaderRoute: typeof IniciarSesionRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_public': {
      id: '/_public'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PublicRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_public/': {
      id: '/_public/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof PublicIndexRouteImport
      parentRoute: typeof PublicRoute
    }
  }
}

interface PublicRouteChildren {
  PublicIndexRoute: typeof PublicIndexRoute
}

const PublicRouteChildren: PublicRouteChildren = {
  PublicIndexRoute: PublicIndexRoute,
}

const PublicRouteWithChildren =
  PublicRoute._addFileChildren(PublicRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  PublicRoute: PublicRouteWithChildren,
  IniciarSesionRoute: IniciarSesionRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
